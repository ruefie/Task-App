@use "sass:color";

$text-color: #374151;
$border-color: #e5e7eb;
$white: #ffffff;
$primary-color: #2563eb;
$hover-bg: #f3f4f6;
$error-color: #ef4444;
$success-color: #10b981;
$warning-color: #f59e0b;

.container {
  h1 {
    font-size: 1.5rem;
    font-weight: 600;
    color: $text-color;
    margin-bottom: 1.5rem;
  }
}

.error {
  background-color: color.adjust($error-color, $lightness: 45%);
  color: color.adjust($error-color, $lightness: -20%);
  padding: 0.75rem;
  border-radius: 0.375rem;
  margin-bottom: 1rem;
  border: 1px solid color.adjust($error-color, $lightness: 30%);
}

.summary {
  display: flex;
  align-items: center;
  justify-content: space-between;
  margin-bottom: 1rem;
  padding: 0.5rem 0;
  
  .totalTime {
    display: flex;
    align-items: center;
    gap: 0.5rem;
    font-size: 0.875rem;
    color: $text-color;
    background-color: $hover-bg;
    padding: 0.5rem 0.75rem;
    border-radius: 0.375rem;
  }
}

.refreshButton {
  display: flex;
  align-items: center;
  gap: 0.5rem;
  padding: 0.5rem 1rem;
  background-color: #f8f9fa;
  border: 1px solid #dee2e6;
  border-radius: 0.375rem;
  color: #495057;
  font-size: 0.875rem;
  font-weight: 500;
  cursor: pointer;
  transition: all 0.2s ease-in-out;

  &:hover {
    background-color: #e9ecef;
    border-color: #ced4da;
  }

  &:active {
    background-color: #dee2e6;
  }

  svg {
    width: 1rem;
    height: 1rem;
  }
}

.addButton {
  display: flex;
  align-items: center;
  gap: 0.5rem;
  padding: 0.75rem 1rem;
  background-color: $primary-color;
  color: $white;
  border: none;
  border-radius: 0.375rem;
  font-weight: 500;
  cursor: pointer;
  transition: all 0.2s;
  margin-bottom: 1.5rem;
  
  &:hover {
    background-color: color.adjust($primary-color, $lightness: -5%);
  }
}

.formCard {
  background-color: $white;
  border-radius: 0.5rem;
  box-shadow: 0 1px 3px rgba(0, 0, 0, 0.1);
  margin-bottom: 1.5rem;
  overflow: hidden;
}

.formHeader {
  display: flex;
  justify-content: space-between;
  align-items: center;
  padding: 1rem 1.5rem;
  border-bottom: 1px solid $border-color;
  
  h2 {
    font-size: 1.25rem;
    font-weight: 600;
    color: $text-color;
  }
  
  .closeButton {
    background: none;
    border: none;
    color: color.adjust($text-color, $lightness: 30%);
    cursor: pointer;
    
    &:hover {
      color: $text-color;
    }
  }
}

.form {
  padding: 1.5rem;
}

.formGroup {
  margin-bottom: 1.25rem;
  
  label {
    display: block;
    font-size: 0.875rem;
    font-weight: 500;
    color: $text-color;
    margin-bottom: 0.5rem;
  }
  
  input, select, textarea {
    width: 100%;
    padding: 0.75rem;
    border: 1px solid $border-color;
    border-radius: 0.375rem;
    font-size: 0.875rem;
    
    &:focus {
      outline: none;
      border-color: $primary-color;
      box-shadow: 0 0 0 2px color.adjust($primary-color, $lightness: 30%, $alpha: -0.7);
    }
  }
  
  textarea {
    resize: vertical;
  }
}

.formRow {
  display: grid;
  grid-template-columns: 1fr 1fr;
  gap: 1rem;
  margin-bottom: 1.25rem;
  
  .formGroup {
    margin-bottom: 0;
  }
}

.inputIcon {
  margin-right: 0.5rem;
  vertical-align: middle;
}

.attachmentLabel {
  cursor: pointer;
  
  .attachmentButton {
    display: inline-flex;
    align-items: center;
    gap: 0.5rem;
    padding: 0.75rem 1rem;
    background-color: $hover-bg;
    border: 1px solid $border-color;
    border-radius: 0.375rem;
    font-size: 0.875rem;
    font-weight: 500;
    color: $text-color;
    transition: all 0.2s;
    
    &:hover {
      background-color: color.adjust($hover-bg, $lightness: -2%);
    }
  }
  
  .fileInput {
    display: none;
  }
}

.attachmentList {
  margin-top: 0.75rem;
  
  .attachmentItem {
    display: flex;
    justify-content: space-between;
    align-items: center;
    padding: 0.5rem 0.75rem;
    background-color: $hover-bg;
    border-radius: 0.25rem;
    margin-bottom: 0.5rem;
    font-size: 0.875rem;
    
    .removeAttachment {
      background: none;
      border: none;
      color: color.adjust($text-color, $lightness: 30%);
      cursor: pointer;
      
      &:hover {
        color: $error-color;
      }
    }
  }
}

.formButtons {
  display: flex;
  justify-content: flex-end;
  gap: 1rem;
  margin-top: 1.5rem;
  
  button {
    padding: 0.75rem 1.5rem;
    border-radius: 0.375rem;
    font-weight: 500;
    cursor: pointer;
    transition: all 0.2s;
    
    &:disabled {
      opacity: 0.7;
      cursor: not-allowed;
    }
  }
  
  .closeButton {
    background-color: $white;
    border: 1px solid $border-color;
    color: $text-color;
    
    &:hover:not(:disabled) {
      background-color: $hover-bg;
    }
  }
  
  .saveButton {
    display: flex;
    align-items: center;
    gap: 0.5rem;
    background-color: $primary-color;
    border: none;
    color: $white;
    
    &:hover:not(:disabled) {
      background-color: color.adjust($primary-color, $lightness: -5%);
    }
  }
}

// Kanban Board Styles
.kanbanBoard {
  margin-top: 2rem;
}

.kanbanColumns {
  display: grid;
  grid-template-columns: repeat(auto-fit, minmax(280px, 1fr));
  gap: 1rem;
  
  @media (min-width: 1200px) {
    grid-template-columns: repeat(4, 1fr);
  }
}

.kanbanColumn {
  background-color: $hover-bg;
  border-radius: 0.5rem;
  padding: 1rem;
  min-height: 400px;
  display: flex;
  flex-direction: column;
  
  .columnTitle {
    font-size: 1rem;
    font-weight: 600;
    color: $text-color;
    margin-bottom: 1rem;
    padding-bottom: 0.5rem;
    border-bottom: 2px solid $border-color;
  }
  
  .columnContent {
    flex: 1;
    display: flex;
    flex-direction: column;
    gap: 1rem;
    min-height: 200px;
    overflow-y: auto;
    padding-right: 0.25rem;
    
    &::-webkit-scrollbar {
      width: 4px;
    }
    
    &::-webkit-scrollbar-track {
      background: transparent;
    }
    
    &::-webkit-scrollbar-thumb {
      background-color: color.adjust($border-color, $lightness: -10%);
      border-radius: 4px;
    }
  }
}

.emptyColumn {
  padding: 1rem;
  text-align: center;
  color: color.adjust($text-color, $lightness: 30%);
  font-size: 0.875rem;
  border: 1px dashed $border-color;
  border-radius: 0.375rem;
  margin-top: 0.5rem;
}

.task {
  display: flex;
  flex-direction: column;
  gap: 0.75rem;
  background-color: $white;
  border-radius: 0.5rem;
  box-shadow: 0 1px 2px rgba(0, 0, 0, 0.1);
  padding: 1rem;
  transition: all 0.2s;
  cursor: grab;
  
  &:hover {
    box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);
    transform: translateY(-2px);
  }
  
 
  
  &.dragging {
    opacity: 0.8;
    box-shadow: 0 5px 10px rgba(0, 0, 0, 0.1);
    transform: scale(1.02);
    cursor: grabbing;
  }

// Priority-based styling
&.normal {
  border-left: 4px solid $primary-color;
}

&.high {
  border-left: 4px solid $warning-color;
}

&.urgent {
  border-left: 4px solid $error-color;
}

}
  
.completed {
  opacity: 0.7;
  
  .title {
    text-decoration: line-through;
  }
}
  
  .taskTop {
    display: flex;
    justify-content: space-between;
    align-items: center;
    margin-bottom: 0.5rem;
  }
  

  .taskHeader {
    display: flex;
    justify-content: space-between;
    align-items: flex-start;
    margin-bottom: 0.5rem;
    
    .titleSection {
      display: flex;
      align-items: center;
      gap: 0.5rem;
      flex: 1;
      min-width: 0;
      
      .title {
        font-size: 1rem;
        font-weight: 600;
        color: $text-color;
        white-space: nowrap;
        overflow: hidden;
        text-overflow: ellipsis;
      }
      
      .editButton {
        flex-shrink: 0;
        background: none;
        border: none;
        color: color.adjust($text-color, $lightness: 30%);
        cursor: pointer;
        
        &:hover {
          color: $primary-color;
        }
      }
    }
    
    .tags {
      display: flex;
      gap: 0.5rem;
      flex-shrink: 0;
      
      .tag {
        padding: 0.25rem 0.5rem;
        border-radius: 0.25rem;
        font-size: 0.75rem;
        font-weight: 500;
        background-color: $hover-bg;
        color: $text-color;
        
        &.urgent {
          background-color: color.adjust($error-color, $lightness: 20%);
          color: color.adjust($error-color, $lightness: -20%);
        }
        
        &.high {
          background-color: color.adjust($warning-color, $lightness: 40%);
          color: color.adjust($warning-color, $lightness: -20%);
        }
        
        &.normal {
          background-color: color.adjust($primary-color, $lightness: 40%);
          color: color.adjust($primary-color, $lightness: -20%);
        }
      }
    }
  }
  
  .taskSummary {
    display: flex;
    gap: 1rem;
    margin-bottom: 0.5rem;
    flex-wrap: wrap;
    
    .timeInfo, .sessionInfo {
      display: flex;
      align-items: center;
      gap: 0.5rem;
      font-size: 0.75rem;
      color: color.adjust($text-color, $lightness: 20%);
    }
  }
  
  .projectInfo {
    display: flex;
    gap: 1rem;
    margin-bottom: 0.5rem;
    flex-wrap: wrap;
    
    .infoItem {
      display: flex;
      align-items: center;
      gap: 0.5rem;
      font-size: 0.75rem;
      color: color.adjust($text-color, $lightness: 20%);
      white-space: nowrap;
      overflow: hidden;
      text-overflow: ellipsis;
      max-width: 100%;
    }
  }
  
  .description {
    font-size: 0.75rem;
    color: $text-color;
    margin-bottom: 0.5rem;
    line-height: 1.5;
    display: -webkit-box;
    -webkit-line-clamp: 2;
    -webkit-box-orient: vertical;
    overflow: hidden;
  }
  
  .taskAttachments {
    margin-bottom: 0.5rem;
    
    h4 {
      font-size: 0.75rem;
      font-weight: 600;
      color: $text-color;
      margin-bottom: 0.25rem;
    }
    
    .attachmentGrid {
      display: flex;
      flex-wrap: wrap;
      gap: 0.5rem;
      
      .attachmentLink {
        display: inline-flex;
        align-items: center;
        gap: 0.25rem;
        padding: 0.25rem 0.5rem;
        background-color: $hover-bg;
        border-radius: 0.25rem;
        font-size: 0.75rem;
        color: $text-color;
        text-decoration: none;
        
        &:hover {
          background-color: color.adjust($hover-bg, $lightness: -2%);
          color: $primary-color;
        }
      }
    }
  }
  
  .taskFooter {
    display: flex;
    flex-direction: column;
    gap: 0.5rem;
    
    .taskInfo {
      display: flex;
      flex-direction: column;
      font-size: 0.75rem;
      color: color.adjust($text-color, $lightness: 20%);
      flex-wrap: wrap;
      gap: 0.5rem;
    }

    .taskDates {
      display: flex;
      flex-direction: column;
      font-size: 0.75rem;
      color: color.adjust($text-color, $lightness: 20%);
      flex-wrap: wrap;
      gap: 0.5rem;
    }
    
    .timerSection {
      .timer {
        display: flex;
        align-items: center;
        gap: 0.5rem;
        
        .time {
          font-family: monospace;
          font-size: 0.75rem;
        }
        
        .timerButton, .resetButton {
          padding: 0.25rem;
          border-radius: 0.25rem;
          border: none;
          cursor: pointer;
          display: flex;
          align-items: center;
          justify-content: center;
        }
        
        .timerButton {
          background-color: $primary-color;
          color: $white;
          
          &:hover {
            background-color: color.adjust($primary-color, $lightness: -5%);
          }
          
          &.running {
            background-color: $warning-color;
            
            &:hover {
              background-color: color.adjust($warning-color, $lightness: -5%);
            }
          }
        }
        
        .resetButton {
          background-color: $hover-bg;
          color: $text-color;
          
          &:hover {
            background-color: color.adjust($hover-bg, $lightness: -5%);
            color: $error-color;
          }
        }
      }

      .sessionInfo{
        display: flex;
        align-items: center;
        gap: 0.5rem;
        
        span {
          font-size: 0.75rem;
          font-weight: 600;
          color: $text-color;
        }
      }
      
      .timerEntries {
       
        h5 {
          font-size: 0.75rem;
          font-weight: 600;
          color: $text-color;
          margin-bottom: 0.25rem;
        }
        
        .entriesList {
          display: flex;
          flex-direction: column;
          gap: 0.25rem;
          max-height: 100px;
          overflow-y: auto;
          
          .timerEntry {
            display: flex;
            align-items: center;
            gap: 0.5rem;
            font-size: 0.75rem;
            color: color.adjust($text-color, $lightness: 20%);
            
            .duration {
              // margin-left: auto;
              font-family: monospace;
            }
          }
        }
      }
    }
  
  
  
}
.deleteButton {
  flex-shrink: 0;
  background: none;
  border: none;
  color: color.adjust($text-color, $lightness: 30%);
  cursor: pointer;
  align-self: flex-start;
  
  &:hover {
    color: $error-color;
  }
}

.checkButton {
  flex-shrink: 0;
  width: 1.75rem;
  height: 1.75rem;
  border-radius: 50%;
  border: 2px solid $border-color;
  background-color: $white;
  color: transparent;
  display: flex;
  align-items: center;
  justify-content: center;
  cursor: pointer;
  transition: all 0.2s;
  
  &:hover {
    border-color: $primary-color;
    color: $primary-color;
  }
}

.completed .checkButton {
  background-color: $success-color;
  border-color: $success-color;
  color: $white;
}



/* Confirmation Dialog Styles */
.confirmationOverlay {
  position: fixed;
  top: 0;
  left: 0;
  right: 0;
  bottom: 0;
  background-color: rgba(0, 0, 0, 0.5);
  display: flex;
  align-items: center;
  justify-content: center;
  z-index: 1000;
}

.confirmationDialog {
  background-color: $white;
  border-radius: 0.5rem;
  padding: 1.5rem;
  width: 90%;
  max-width: 500px;
  box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
  
  h3 {
    font-size: 1.25rem;
    font-weight: 600;
    color: $text-color;
    margin-bottom: 1rem;
  }
  
  p {
    font-size: 0.875rem;
    color: $text-color;
    margin-bottom: 1.5rem;
    line-height: 1.5;
  }
  
  .confirmationButtons {
    display: flex;
    justify-content: flex-end;
    gap: 1rem;
    
    button {
      padding: 0.75rem 1.5rem;
      border-radius: 0.375rem;
      font-weight: 500;
      cursor: pointer;
      transition: all 0.2s;
    }
    
    .cancelButton {
      background-color: $white;
      border: 1px solid $border-color;
      color: $text-color;
      
      &:hover {
        background-color: $hover-bg;
      }
    }
    
    .confirmButton {
      background-color: $error-color;
      border: none;
      color: $white;
      
      &:hover {
        background-color: color.adjust($error-color, $lightness: -5%);
      }
    }
  }
}

.viewTabs {
  display: flex;
  gap: 1rem;
  margin-bottom: 1rem;
}

.viewTabButton {
  display: flex;
  align-items: center;
  padding: 0.5rem 1rem;
  background-color: $hover-bg;
  border: 1px solid $border-color;
  border-radius: 0.375rem;
  font-size: 1rem;
  cursor: pointer;
  transition: background-color 0.2s;
  
  &:hover {
    background-color: color.adjust($hover-bg, $lightness: -5%);
    color: $text-color;
  }
}

.activeView {
  background-color: $primary-color;
  color: $white;
  border-color: $primary-color;
}


.viewTabs {
  display: flex;
  justify-content: center;
  gap: 1rem;
  margin-bottom: 1rem;
}




.listView {
  padding: 1rem;
}

.list {
  display: flex;
  flex-direction: column;
  gap: 1rem;

  
}

.listItem {
  background-color: $white;
  border-radius: 0.5rem;
  box-shadow: 0 1px 2px rgba(0, 0, 0, 0.1);
  display: flex;
  flex-direction: column;
  padding: 1rem;
  transition: all 0.2s;

  &.normal {
    border-left: 4px solid $primary-color;
  }
  
  &.high {
    border-left: 4px solid $warning-color;
  }
  
  &.urgent {
    border-left: 4px solid $error-color;
  }

  &:hover {
    box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);
    transform: translateY(-2px);
  }
}

.listItemTop {
  display: flex;
  justify-content: space-between;
  align-items: center;
  margin-bottom: 0.5rem;
}
.milestone{
  font-size: 1rem;
  font-weight: 600;
  color: $text-color;
}

.listItemContent {
  display: flex;
  flex-direction: column;
  gap: 0.5rem;
}


.tags {
  display: flex;
  gap: 0.5rem;
}

.tag {
  padding: 0.25rem 0.5rem;
  border-radius: 0.25rem;
  font-size: 0.75rem;
  font-weight: 500;
  background-color: $hover-bg;  // fallback background
  color: $text-color;           // fallback text color
}

.tag.normal {
  background-color: color.adjust($primary-color, $lightness: 40%);
  color: color.adjust($primary-color, $lightness: -20%);
}

.tag.high {
  background-color: color.adjust($warning-color, $lightness: 40%);
  color: color.adjust($warning-color, $lightness: -20%);
}

.tag.urgent {
  background-color: color.adjust($error-color, $lightness: 20%);
  color: color.adjust($error-color, $lightness: -20%);
}

// Modal overlay styles

.taskClickable {
  cursor: pointer;
}

.modalOverlay {
  position: fixed;
  top: 0;
  left: 0;
  width: 100vw;
  height: 100vh;
  background-color: rgba(0, 0, 0, 0.6);
  display: flex;
  justify-content: center;
  align-items: center;
  z-index: 1000;
  opacity: 0;
  animation: fadeIn 0.3s forwards;
}

@keyframes fadeIn {
  to { opacity: 1; }
}

// Modal content styles
.modalContent {
  background-color: $white;
  border-radius: 0.5rem;
  padding: 2rem;
  width: 90%;
  max-width: 600px;
  box-shadow: 0 4px 12px rgba(0, 0, 0, 0.15);
  position: relative;
  animation: slideDown 0.3s forwards;
}

@keyframes slideDown {
  from { transform: translateY(-20px); opacity: 0; }
  to { transform: translateY(0); opacity: 1; }
}

.modalCloseButton {
  position: absolute;
  top: 1rem;
  right: 1rem;
  background: transparent;
  border: none;
  font-size: 1.5rem;
  cursor: pointer;
  color: $text-color;
  transition: color 0.2s;
  
  &:hover {
    color: $primary-color;
  }
}

// Task details within the modal
.taskDetails {
  h2 {
    margin-bottom: 1rem;
    font-size: 1.5rem;
    font-weight: 600;
    color: $text-color;
  }
  
  p {
    margin-bottom: 0.75rem;
    font-size: 0.9rem;
    color: $text-color;
  }
  
  h4 {
    margin-top: 1rem;
    font-size: 1rem;
    font-weight: 600;
    color: $text-color;
  }
  
  .attachmentGrid {
    display: flex;
    flex-wrap: wrap;
    gap: 0.5rem;
    
    a {
      padding: 0.25rem 0.5rem;
      background-color: $hover-bg;
      border-radius: 0.25rem;
      text-decoration: none;
      color: $primary-color;
      transition: background-color 0.2s;
      
      &:hover {
        background-color: color.adjust($hover-bg, $lightness: -5%);
      }
    }
  }
}

